<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/26/2021 12:16:29 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-IO22FFD"
  DTS:CreatorName="DESKTOP-IO22FFD\ogabe"
  DTS:DTSID="{38191457-9253-4F3A-A06B-9E62A9159667}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.157"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package2"
  DTS:PackageType="5"
  DTS:VersionBuild="4"
  DTS:VersionGUID="{28B83F9B-CA7E-4837-8885-0106CF9BF1CD}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DBConn]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{A65D6288-BCD9-4051-A642-23655E8A9F81}"
      DTS:ObjectName="DBConn">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=DESKTOP-IO22FFD;Initial Catalog=TSQL2012;Integrated Security=True;Application Name=SSIS-Package2-{A65D6288-BCD9-4051-A642-23655E8A9F81}DESKTOP-IO22FFD.TSQL20121;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BB32F534-89DF-4DD3-9637-6E8F999C5F99}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExcelFileName">
      <DTS:VariableValue
        DTS:DataType="8">Vid177</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{19F7D1B1-B274-4016-977B-94EE438A61D2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FolderPath">
      <DTS:VariableValue
        DTS:DataType="8">D:\SSIS\vid177\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DC23252D-3783-4DC0-909A-BBE802303BBB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RecordCntPerSheet">
      <DTS:VariableValue
        DTS:DataType="3">4</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{09BBFDC9-BC41-4883-AEE2-358A7DA20000}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TableName">
      <DTS:VariableValue
        DTS:DataType="8">[HR].[Employees]</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{7440837A-70E3-4C7C-B254-A9330D204DB7}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_33253d3306f540c6a007368afb090e9d"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::ExcelFileName,User::FolderPath,User::RecordCntPerSheet,User::TableName">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Data.OleDb;
using System.Data.SqlClient;
#endregion

namespace ST_33253d3306f540c6a007368afb090e9d
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
		public void Main()
		{

            string datetime = DateTime.Now.ToString("yyyyMMddHHmmss");
            try
            {

                //Declare Variables
                string ExcelFileName = Dts.Variables["User::ExcelFileName"].Value.ToString();
                string FolderPath = Dts.Variables["User::FolderPath"].Value.ToString();
                string TableName = Dts.Variables["User::TableName"].Value.ToString();
                Int32 RecordCntPerSheet = (Int32)Dts.Variables["User::RecordCntPerSheet"].Value;
                string RecordCntPerSheetDecimal = RecordCntPerSheet + ".0";
                ExcelFileName = ExcelFileName + "_" + datetime;


                OleDbConnection Excel_OLE_Con = new OleDbConnection();
                OleDbCommand Excel_OLE_Cmd = new OleDbCommand();

                //Construct ConnectionString for Excel
                string connstring = "Provider=Microsoft.ACE.OLEDB.12.0;" + "Data Source=" + FolderPath + ExcelFileName
                    + ";" + "Extended Properties=\"Excel 12.0 Xml;HDR=YES;\"";

                //drop Excel file if exists
                File.Delete(FolderPath + "\\" + ExcelFileName + ".xlsx");

                //USE ADO.NET Connection from SSIS Package to get data from table
                SqlConnection myADONETConnection = new SqlConnection();
                myADONETConnection = (SqlConnection)(Dts.Connections["DBConn"].AcquireConnection(Dts.Transaction) as SqlConnection);


                //Read distinct Group Values for each Excel Sheet
                string query = "select ceiling(count(*)/" + RecordCntPerSheetDecimal + ") AS LoopCnt from " + TableName;
                decimal LoopCnt = 0;

                //Get the Count of Sheets need to be created
                SqlCommand cmd = myADONETConnection.CreateCommand();
                cmd.CommandText = query;
                LoopCnt = (decimal)cmd.ExecuteScalar();


                string SheetName = "Sheet";
                int startRowCnt = 0;
                int endRowCnt = RecordCntPerSheet;

                for (int sheetloop = 1; sheetloop <= LoopCnt; sheetloop++)
                {
                    //Load Data into DataTable from SQL ServerTable
                    string queryString = ";with cte as (Select *, Row_Number() over (order by (Select 1)) AS RowNumber from " +
                    TableName + ") Select * From cte where RowNumber > " + startRowCnt.ToString() + " and RowNumber<=" + endRowCnt.ToString();
                    SqlDataAdapter adapter = new SqlDataAdapter(queryString, myADONETConnection);
                    DataSet ds = new DataSet();
                    adapter.Fill(ds);

                    //Get Header Columns
                    string TableColumns = "";

                    // Get the Column List from Data Table so can create Excel Sheet with Header
                    foreach (DataTable table in ds.Tables)
                    {
                        foreach (DataColumn column in table.Columns)
                        {
                            TableColumns += column + "],[";
                        }
                    }

                    // Replace most right comma from Columnlist
                    TableColumns = ("[" + TableColumns.Replace(",", " Text,").TrimEnd(','));
                    TableColumns = TableColumns.Remove(TableColumns.Length - 2);
                    //MessageBox.Show(TableColumns);


                    //Use OLE DB Connection and Create Excel Sheet
                    Excel_OLE_Con.ConnectionString = connstring;
                    Excel_OLE_Con.Open();
                    Excel_OLE_Cmd.Connection = Excel_OLE_Con;
                    Excel_OLE_Cmd.CommandText = "Create table [" + SheetName + sheetloop.ToString() + "] (" + TableColumns + ")";
                    Excel_OLE_Cmd.ExecuteNonQuery();


                    //Write Data to Excel Sheet from DataTable dynamically
                    foreach (DataTable table in ds.Tables)
                    {
                        String sqlCommandInsert = "";
                        String sqlCommandValue = "";
                        foreach (DataColumn dataColumn in table.Columns)
                        {
                            sqlCommandValue += dataColumn + "],[";
                        }

                        sqlCommandValue = "[" + sqlCommandValue.TrimEnd(',');
                        sqlCommandValue = sqlCommandValue.Remove(sqlCommandValue.Length - 2);
                        sqlCommandInsert = "INSERT into [" + SheetName + sheetloop.ToString() + "] (" + sqlCommandValue + ") VALUES(";

                        int columnCount = table.Columns.Count;
                        foreach (DataRow row in table.Rows)
                        {
                            string columnvalues = "";
                            for (int i = 0; i < columnCount; i++)
                            {
                                int index = table.Rows.IndexOf(row);
                                columnvalues += "'" + table.Rows[index].ItemArray[i] + "',";

                            }
                            columnvalues = columnvalues.TrimEnd(',');
                            var command = sqlCommandInsert + columnvalues + ")";
                            Excel_OLE_Cmd.CommandText = command;
                            Excel_OLE_Cmd.ExecuteNonQuery();
                        }

                    }

                    startRowCnt += RecordCntPerSheet;
                    endRowCnt += RecordCntPerSheet;
                    Excel_OLE_Con.Close();
                }
                Dts.TaskResult = (int)ScriptResults.Success;
            }

            catch (Exception exception)
            {

                // Create Log File for Errors
                using (StreamWriter sw = File.CreateText(Dts.Variables["User::FolderPath"].Value.ToString() + "\\" +
                    "ErrorLog_" + datetime + ".log"))
                {
                    sw.WriteLine(exception.ToString());
                    Dts.TaskResult = (int)ScriptResults.Failure;

                }

            }





            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_33253d3306f540c6a007368afb090e9d.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{df634328-7fc6-4f51-a5b9-46a7e1a09581}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_33253d3306f540c6a007368afb090e9d</RootNamespace>
    <AssemblyName>ST_33253d3306f540c6a007368afb090e9d</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_33253d3306f540c6a007368afb090e9d</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_33253d3306f540c6a007368afb090e9d</msb:DisplayName>
    <msb:ProjectId>{739994EF-C4BE-44BC-AD07-C8ED1A8B6E0A}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_33253d3306f540c6a007368afb090e9d.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
    <msb:Breakpoint Include="32a993dc61c94207b18db4df96109c43">
      <msb:FileName>ScriptMain.cs</msb:FileName>
      <msb:LineNumber>38</msb:LineNumber>
      <msb:ColumnNumber>17</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Condition>
      </msb:Condition>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
    <msb:Breakpoint Include="332eee4f46c0429e8d8aee9e95be5346">
      <msb:FileName>ScriptMain.cs</msb:FileName>
      <msb:LineNumber>148</msb:LineNumber>
      <msb:ColumnNumber>13</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Condition>
      </msb:Condition>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
    <msb:Breakpoint Include="decf061f4d334f61a0d2b93bab53ceba">
      <msb:FileName>ScriptMain.cs</msb:FileName>
      <msb:LineNumber>61</msb:LineNumber>
      <msb:ColumnNumber>17</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Condition>
      </msb:Condition>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
    <msb:Breakpoint Include="bd783a2c3d8b4d88aa90ae9bb09851fe">
      <msb:FileName>ScriptMain.cs</msb:FileName>
      <msb:LineNumber>152</msb:LineNumber>
      <msb:ColumnNumber>24</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Condition>
      </msb:Condition>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
    <msb:Breakpoint Include="2c53d99d0c70424fb724b7dd7b4b5d08">
      <msb:FileName>ScriptMain.cs</msb:FileName>
      <msb:LineNumber>87</msb:LineNumber>
      <msb:ColumnNumber>21</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Condition>
      </msb:Condition>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
    <msb:Breakpoint Include="3458fb647e7d49f1a7891c740b3dcd80">
      <msb:FileName>ScriptMain.cs</msb:FileName>
      <msb:LineNumber>74</msb:LineNumber>
      <msb:ColumnNumber>22</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Condition>
      </msb:Condition>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
    <msb:Breakpoint Include="15ce6983354c4fd08757be88744361f1">
      <msb:FileName>ScriptMain.cs</msb:FileName>
      <msb:LineNumber>156</msb:LineNumber>
      <msb:ColumnNumber>21</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Condition>
      </msb:Condition>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
    <msb:Breakpoint Include="eaedfff86e3c48d3a33edcd6f1ec1d31">
      <msb:FileName>ScriptMain.cs</msb:FileName>
      <msb:LineNumber>155</msb:LineNumber>
      <msb:ColumnNumber>21</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Condition>
      </msb:Condition>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
    <msb:Breakpoint Include="9f9fe7fcb0dc409ea3cc6462e41fe3e5">
      <msb:FileName>ScriptMain.cs</msb:FileName>
      <msb:ColumnNumber>17</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:LineNumber>40</msb:LineNumber>
      <msb:Condition>
      </msb:Condition>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
    <msb:Breakpoint Include="0bf7e260b0874089aa045f3f986d5278">
      <msb:FileName>ScriptMain.cs</msb:FileName>
      <msb:ColumnNumber>17</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:LineNumber>42</msb:LineNumber>
      <msb:Condition>
      </msb:Condition>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_33253d3306f540c6a007368afb090e9d.Properties.Settings.get_Default():ST_33253d3306f540c6a007368afb090e9d.Properties.Sett" +
    "ings")]

namespace ST_33253d3306f540c6a007368afb090e9d.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_33253d3306f540c6a007368afb090e9d")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_33253d3306f540c6a007368afb090e9d")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_33253d3306f540c6a007368afb090e9d.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_33253d3306f540c6a007368afb090e9d.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_33253d3306f540c6a007368afb090e9d.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_33253d3306f540c6a007368afb090e9d.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_33253d3306f540c6a007368afb090e9d.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_33253d3306f540c6a007368afb090e9d.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHDEhWAAAAAAAAAAAOAAIiALATAAAB4AAAAIAAAAAAAAAj0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALA8AABPAAAAAEAAAGwEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAACB0AAAAgAAAAHgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAGwEAAAAQAAAAAYAAAAgAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADk
PAAAAAAAAEgAAAACAAUADCcAAOwUAAABAAAAAAAAAPg7AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBgCcBQAAAQAAESgQAAAKCxIBcgEAAHAoEQAACgoCKBIA
AApvEwAACnIfAABwbxQAAApvFQAACm8WAAAKDAIoEgAACm8TAAAKckcAAHBvFAAACm8VAAAKbxYA
AAoNAigSAAAKbxMAAApyaQAAcG8UAAAKbxUAAApvFgAAChMEAigSAAAKbxMAAApyiQAAcG8UAAAK
bxUAAAqlKAAAARMFEgUoFwAACnK5AABwKBgAAAoTBghyvwAAcAYoGQAACgxzGgAAChMHcxsAAAoT
CHLDAABwCQhyIQEAcCgcAAAKEwkJcn8BAHAIcoMBAHAoHAAACigdAAAKcx4AAAoTCgIoEgAACm8f
AAAKco8BAHBvIAAACgIoEgAACm8hAAAKbyIAAAp1EgAAARMKcp0BAHARBnLPAQBwEQQoHAAAChML
Egz+FRMAAAERCm8jAAAKJRELbyQAAApvJQAACqUTAAABEwxy9QEAcBMNFhMOEQUTDxcTEDifAwAA
HI0pAAABJRZyAQIAcKIlFxEEoiUYcqgCAHCiJRkSDigXAAAKoiUacvYCAHCiJRsSDygXAAAKoigm
AAAKEQpzJwAACnMoAAAKExEREW8pAAAKJnIYAwBwExIREW8qAAAKbysAAAoTEytkERNvLAAACnQY
AAABby0AAApvKwAAChMUKyoRFG8sAAAKdBYAAAETFRESERUlLQQmFCsFbxYAAApyGgMAcCgZAAAK
ExIRFG8uAAAKLc3eFREUdRcAAAETFhEWLAcRFm8vAAAK3BETby4AAAotk94VERN1FwAAARMWERYs
BxEWby8AAArcciIDAHAREnImAwBwcioDAHBvMAAACheNNAAAASUWHyydbzEAAAooGAAAChMSERIR
Em8yAAAKGFlvMwAAChMSEQcRCW80AAAKEQdvNQAAChEIEQdvNgAAChEIHI0pAAABJRZyOAMAcKIl
FxENoiUYEhAoFwAACqIlGXJWAwBwoiUaERKiJRtyXgMAcKIoJgAACm8kAAAKEQhvNwAACiYREW8q
AAAKbysAAAoTEzjDAQAAERNvLAAACnQYAAABExdyGAMAcBMYchgDAHATGREXby0AAApvKwAAChMU
KyoRFG8sAAAKdBYAAAETGxEZERslLQQmFCsFbxYAAApyGgMAcCgZAAAKExkRFG8uAAAKLc3eFREU
dRcAAAETFhEWLAcRFm8vAAAK3HIiAwBwERkXjTQAAAElFh8snW8xAAAKKBgAAAoTGREZERlvMgAA
ChhZbzMAAAoTGRyNKQAAASUWcmIDAHCiJRcRDaIlGBIQKBcAAAqiJRlyVgMAcKIlGhEZoiUbcn4D
AHCiKCYAAAoTGBEXby0AAApvOAAAChMaERdvOQAACm8rAAAKExQ4oAAAABEUbywAAAp0GQAAARMc
chgDAHATHRYTHytLERdvOQAAChEcbzoAAAoTIBEdcpIDAHARF285AAAKESBvOwAACm88AAAKER+a
JS0EJhQrBW8WAAAKcpYDAHAoHAAAChMdER8XWBMfER8RGjKvER0XjTQAAAElFh8snW8xAAAKEx0R
GBEdcl4DAHAoGQAAChMeEQgRHm8kAAAKEQhvNwAACiYRFG8uAAAKOlT////eFREUdRcAAAETFhEW
LAcRFm8vAAAK3BETby4AAAo6Mf7//94VERN1FwAAARMWERYsBxEWby8AAArcEQ4RBVgTDhEPEQVY
Ew8RB289AAAKERAXWBMQERAoPgAAChEMKD8AAAo6Tvz//wIoEgAAChZvQAAACt5iEyECKBIAAApv
EwAACnJHAABwbxQAAApvFQAACm8WAAAKcpwDAHAGcrIDAHAoHAAACihBAAAKEyIRIhEhbxYAAApv
QgAACgIoEgAAChdvQAAACt4MESIsBxEiby8AAArc3gACKBIAAAoWb0AAAAoqQawAAAIAAADuAQAA
NwAAACUCAAAVAAAAAAAAAAIAAADUAQAAcQAAAEUCAAAVAAAAAAAAAAIAAAA1AwAANwAAAGwDAAAV
AAAAAAAAAAIAAAAGBAAAswAAALkEAAAVAAAAAAAAAAIAAAAGAwAA1gEAANwEAAAVAAAAAAAAAAIA
AABlBQAAHAAAAIEFAAAMAAAAAAAAAAAAAAATAAAAGgUAAC0FAABiAAAAGgAAAR4CKEMAAAoqHgIo
RAAACiqufgEAAAQtHnK8AwBw0AMAAAIoRQAACm9GAAAKc0cAAAqAAQAABH4BAAAEKhp+AgAABCoe
AoACAAAEKhp+AwAABCoeAihIAAAKKi5zCAAABoADAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAu
MzAzMTkAAAAABQBsAAAAjAUAACN+AAD4BQAAaAgAACNTdHJpbmdzAAAAAGAOAAAwBAAAI1VTAJAS
AAAQAAAAI0dVSUQAAACgEgAATAIAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6ATMAFgAAAQAA
ADoAAAAFAAAABgAAAAkAAAABAAAASAAAAAIAAAAQAAAAAQAAAAIAAAADAAAABAAAAAEAAAAFAAAA
AQAAAAEAAAAAAIEEAQAAAAAABgDnAnMGBgB2A3MGBgAzAmAGDwDnBgAABgBgAiQFBgDKAiQFBgCr
AiQFBgBdAyQFBgAHAyQFBgAgAyQFBgB3AiQFBgCSArMDCgA7AxUECgCCARUEBgAaAbcEDgCABU0A
DgCUAE0ADgCiBdoHBgA+BLcEDgCrB0EABgA5BlMHDgDfBEEABgDlALcEDgDSAEEADgAyCEEABgCw
BbcEBgASBhAABgC+BLcEBgAWAmAGBgCkB7cEBgDwBZMGBgDNBf8EEgDfAWsEEgBHAmsEEgC5AeoE
BgD7AXMGCgBZBBUEFgA0ByMBFgDcACMBBgABALcEBgDkA7cEBgAVARAAFgBqByMBFgAABiMBDgCv
ANoHDgCXALoFDgAqBtoHDgAtBroFDgA2BUEADgCeAUEADgBKBUEABgDZBbcEDgCDBboFDgBfBUEA
BgAfBhAABgBNAbcEBgDxALcEBgBMCCQFAAAAAAcAAAAAAAEAAQABABAA1ARoADkAAQABAAAAEACa
BvYGeQABAAMAAAEQAD4H9gaNAAMABwADAQAAhgcAAHEABAAKABEAwwRJAREAcgFNAREAwgBSAQYG
OQBWAVaAdgdZAVaAUgFZAVAgAAAAAIYA2gQGAAEApCYAAAAAhhhTBgYAAQCsJgAAAACDGFMGBgAB
ALQmAAAAAJMI7AVdAQEA4CYAAAAAkwhaAWIBAQDnJgAAAACTCGYBaAEBAO8mAAAAAJYIvwdvAQIA
9iYAAAAAhhhTBgYAAgD+JgAAAACRGFkGdAECAAAAAQCeAwkAUwYBABEAUwYGABkAUwYKACkAUwYQ
ADEAUwYQADkAUwYQAEEAUwYQAEkAUwYQAFEAUwYQAFkAUwYQAGEAUwYQAGkAUwYGAOkAUwYGABEB
UwYVACEBUwYGAHkAKghRAHkA4gNWAHEAfgdbACkBMAdhADEBrgRnADkBlANuAPEA4gNyAEEB4gNy
AEkBnQd2AEkBnQd8AIEAUwYGAIkAUwYGAEkBnQeDAFEB9AGLAJEAUwYGACkBZgeQAFkBrgSWACkB
FAVuAGEBkAWdAJEAoQCiAHEBDwgQAHEB3gVuAEkBnQeoAHkBUwauAKEAUwYGAIEBqQS1AKEAJQe7
AJEBRQbBAKkA8AduAMEARwfGAKkABgjMALkA1wEGAEkBugDQAEkBjADWAEkB6wPcAEkBpAPgAKkB
zQMQAKkBzwQGAIkAcQXlAHEBVQjcAJEB/AfcAMEAlAfrALEBqwPxALEBrgT3AMkAOgj9AKkB0QEG
AJkAswcCAZkARgQIASkBywcBAFEBHwgQAbkBQwEQAHEAUwYGAPEAUwYGAMEBAwEWAcEBSAgfAfkA
UwYlARkBUwYGAAgAFAA/AQgAGABEASkAcwCwAS4ACwCIAS4AEwCRAS4AGwCwAS4AIwC5AS4AKwDi
AS4AMwDiAS4AOwDiAS4AQwC5AS4ASwDoAS4AUwDiAS4AWwD/AUMAYwBEAUkAcwCwAWEAewBEAWMA
awBEARwAAwABAAQAAwAAAPAFeAEAAHoBfQEAAMMHgwECAAQAAwACAAUABQABAAYABQACAAcABwAE
gAAAAQAAAGoeIAQAAAAAAABoAAAABAAAAAAAAAAAAAAALQFfAAAAAAAPAAAAAAAAAAAAAAA2AfYD
AAAAAAQAAAAAAAAAAAAAAC0BQQAAAAAABAAAAAAAAAAAAAAALQG3BAAAAAAPAAAAAAAAAAAAAAA2
ARoAAAAAAAAAAAABAAAApAYAAAUAAgAAAABJbnQzMgA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9z
b2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AU3lzdGVtLkRhdGEAU3lzdGVtLkRhdGEu
T2xlRGIAbXNjb3JsaWIAU1RfMzMyNTNkMzMwNmY1NDBjNmEwMDczNjhhZmIwOTBlOWQAVHJpbUVu
ZABPbGVEYkNvbW1hbmQAQ3JlYXRlQ29tbWFuZABTcWxDb21tYW5kAFJlcGxhY2UAZGVmYXVsdElu
c3RhbmNlAERhdGFUYWJsZQBWYXJpYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBH
ZXRUeXBlRnJvbUhhbmRsZQBGaWxlAERhdGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1
bnRpbWUAV3JpdGVMaW5lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNv
dXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEludGVybmFsRGF0YUNvbGxl
Y3Rpb25CYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAENsb3NlAERpc3Bvc2UARWRpdG9yQnJv
d3NhYmxlU3RhdGUARGVsZXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9u
VXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRy
aWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBU
YXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFz
c2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0
ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJ
U1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBS
dW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAdmFsdWUAUmVtb3ZlAEluZGV4
T2YAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBzZXRfQ29ubmVjdGlvblN0cmluZwBUb1N0cmlu
ZwBnZXRfTGVuZ3RoAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAERlY2ltYWwAb3BfTGVzc1RoYW5PckVxdWFsAFNj
cmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF8zMzI1M2QzMzA2ZjU0MGM2
YTAwNzM2OGFmYjA5MGU5ZC5kbGwARmlsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1h
bgBPcGVuAFNjcmlwdE1haW4ARGF0YUNvbHVtbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0u
R2xvYmFsaXphdGlvbgBnZXRfVHJhbnNhY3Rpb24AU3lzdGVtLlJlZmxlY3Rpb24ARGF0YVRhYmxl
Q29sbGVjdGlvbgBEYXRhQ29sdW1uQ29sbGVjdGlvbgBEYXRhUm93Q29sbGVjdGlvbgBzZXRfQ29u
bmVjdGlvbgBPbGVEYkNvbm5lY3Rpb24AQWNxdWlyZUNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBF
eGNlcHRpb24AU3lzdGVtLkRhdGEuQ29tbW9uAEN1bHR1cmVJbmZvAENoYXIARXhlY3V0ZVNjYWxh
cgBnZXRfUmVzb3VyY2VNYW5hZ2VyAENvbm5lY3Rpb25NYW5hZ2VyAFN0cmVhbVdyaXRlcgBUZXh0
V3JpdGVyAFNxbERhdGFBZGFwdGVyAElFbnVtZXJhdG9yAEdldEVudW1lcmF0b3IALmN0b3IALmNj
dG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5
c3RlbS5SZXNvdXJjZXMAU1RfMzMyNTNkMzMwNmY1NDBjNmEwMDczNjhhZmIwOTBlOWQuUHJvcGVy
dGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUXzMzMjUzZDMzMDZmNTQw
YzZhMDA3MzY4YWZiMDkwZTlkLlByb3BlcnRpZXMAZ2V0X1RhYmxlcwBnZXRfVmFyaWFibGVzAFNl
dHRpbmdzAGdldF9Db2x1bW5zAFN5c3RlbS5Db2xsZWN0aW9ucwBnZXRfQ29ubmVjdGlvbnMAU3Vj
Y2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0X1Jvd3MAQ29uY2F0AE9iamVjdABEYXRhU2V0
AG9wX0ltcGxpY2l0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AFN5c3RlbS5EYXRhLlNxbENs
aWVudABnZXRfQ3VycmVudABnZXRfQ291bnQATW92ZU5leHQAc2V0X0NvbW1hbmRUZXh0AENyZWF0
ZVRleHQAZ2V0X05vdwBEYXRhUm93AGdldF9JdGVtQXJyYXkAZ2V0X0Fzc2VtYmx5AEV4ZWN1dGVO
b25RdWVyeQAAAAAAHXkAeQB5AHkATQBNAGQAZABIAEgAbQBtAHMAcwAAJ1UAcwBlAHIAOgA6AEUA
eABjAGUAbABGAGkAbABlAE4AYQBtAGUAACFVAHMAZQByADoAOgBGAG8AbABkAGUAcgBQAGEAdABo
AAAfVQBzAGUAcgA6ADoAVABhAGIAbABlAE4AYQBtAGUAAC9VAHMAZQByADoAOgBSAGUAYwBvAHIA
ZABDAG4AdABQAGUAcgBTAGgAZQBlAHQAAAUuADAAAANfAABdUAByAG8AdgBpAGQAZQByAD0ATQBp
AGMAcgBvAHMAbwBmAHQALgBBAEMARQAuAE8ATABFAEQAQgAuADEAMgAuADAAOwBEAGEAdABhACAA
UwBvAHUAcgBjAGUAPQAAXTsARQB4AHQAZQBuAGQAZQBkACAAUAByAG8AcABlAHIAdABpAGUAcwA9
ACIARQB4AGMAZQBsACAAMQAyAC4AMAAgAFgAbQBsADsASABEAFIAPQBZAEUAUwA7ACIAAANcAAAL
LgB4AGwAcwB4AAANRABCAEMAbwBuAG4AADFzAGUAbABlAGMAdAAgAGMAZQBpAGwAaQBuAGcAKABj
AG8AdQBuAHQAKAAqACkALwAAJSkAIABBAFMAIABMAG8AbwBwAEMAbgB0ACAAZgByAG8AbQAgAAAL
UwBoAGUAZQB0AACApTsAdwBpAHQAaAAgAGMAdABlACAAYQBzACAAKABTAGUAbABlAGMAdAAgACoA
LAAgAFIAbwB3AF8ATgB1AG0AYgBlAHIAKAApACAAbwB2AGUAcgAgACgAbwByAGQAZQByACAAYgB5
ACAAKABTAGUAbABlAGMAdAAgADEAKQApACAAQQBTACAAUgBvAHcATgB1AG0AYgBlAHIAIABmAHIA
bwBtACAAAE0pACAAUwBlAGwAZQBjAHQAIAAqACAARgByAG8AbQAgAGMAdABlACAAdwBoAGUAcgBl
ACAAUgBvAHcATgB1AG0AYgBlAHIAIAA+ACAAACEgAGEAbgBkACAAUgBvAHcATgB1AG0AYgBlAHIA
PAA9AAABAAddACwAWwAAA1sAAAMsAAANIABUAGUAeAB0ACwAAB1DAHIAZQBhAHQAZQAgAHQAYQBi
AGwAZQAgAFsAAAddACAAKAAAAykAABtJAE4AUwBFAFIAVAAgAGkAbgB0AG8AIABbAAATKQAgAFYA
QQBMAFUARQBTACgAAAMnAAEFJwAsAAEVXABFAHIAcgBvAHIATABvAGcAXwAACS4AbABvAGcAAHFT
AFQAXwAzADMAMgA1ADMAZAAzADMAMAA2AGYANQA0ADAAYwA2AGEAMAAwADcAMwA2ADgAYQBmAGIA
MAA5ADAAZQA5AGQALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAA
PytHe82ntE6aYN3olqUdmQAEIAEBCAMgAAEFIAEBEREEIAEBDgYgAQERgIU0ByMOET0ODg4IDhJB
EkUOEkkOEU0OCAgIElEOElUSVRJZEl0SYQ4OCBJZEmUODggIEmkSbQQAABE9BCABDg4FIAASgJUF
IAASgJkGIAESgJ0cAyAAHAMgAA4FAAIODg4GAAMODg4OBwAEDg4ODg4EAAEBDgUgABKArQYgARKA
sRwEIAEcHAUgABKAtQUAAQ4dDgYgAgEOEkkFIAEIElEFIAASgMUEIAASVQUgABKAzQMgAAIFIAIO
Dg4FIAEOHQMDIAAIBCABDggFIAEBEkEFIAASgNkFIAEIEmUFIAESZQgEIAAdHAUAARFNCAcAAgIR
TRFNBQABEm0OCAABEoDhEYDlBSAAEoDpByACAQ4SgOkIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQB
AAAAAwYSfQQGEoCBAwYSEAIGCAMGERQEAAASfQUAABKAgQYAAQESgIEEAAASEAMAAAEECAASfQUI
ABKAgQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAA
ACgBACNTVF8zMzI1M2QzMzA2ZjU0MGM2YTAwNzM2OGFmYjA5MGU5ZAAABQEAAAAAFgEAEUNvcHly
aWdodCBAICAyMDIxAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29y
a0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwAAALQAAADOyu++AQAAAJEAAABsU3lzdGVt
LlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3Vs
dHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNv
dXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAADYPAAAAAAAAAAA
AADyPAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5DwAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBt
c2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAAEAQAAAAAAAAAAAAAEAQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABACAEah4AAAEAIARqHj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBHADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAEwDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8AMwAzADIANQAzAGQAMwAzADAANgBmADUANAAwAGMANgBhADAAMAA3ADMANgA4AGEAZgBiADAA
OQAwAGUAOQBkAAAAPAAOAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADcANwA4
ADYALgAxADAANQA2AAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwAzADMA
MgA1ADMAZAAzADMAMAA2AGYANQA0ADAAYwA2AGEAMAAwADcAMwA2ADgAYQBmAGIAMAA5ADAAZQA5
AGQALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkA
cgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBh
AHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMA
VABfADMAMwAyADUAMwBkADMAMwAwADYAZgA1ADQAMABjADYAYQAwADAANwAzADYAOABhAGYAYgAw
ADkAMABlADkAZAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQA
XwAzADMAMgA1ADMAZAAzADMAMAA2AGYANQA0ADAAYwA2AGEAMAAwADcAMwA2ADgAYQBmAGIAMAA5
ADAAZQA5AGQAAABAAA4AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADcA
NwA4ADYALgAxADAANQA2AAAARAAOAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANwA3ADgANgAuADEAMAA1ADYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAAQ9AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="38"
            Column="17" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="148"
            Column="13" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="61"
            Column="17" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="152"
            Column="24" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="74"
            Column="22" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="87"
            Column="21" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="156"
            Column="21" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="155"
            Column="21" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="40"
            Column="17" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="42"
            Column="17" />
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="134,42"
          Id="Package\Script Task"
          TopLeft="232,166" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>